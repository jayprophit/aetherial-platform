name: Aetherial Platform CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/aetherial-platform
  KUBE_NAMESPACE: ${{ github.event_name == 'push' && 'production' || 'staging' }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test

    - name: Run integration tests
      run: npm run test:integration

  build:
    name: Build and Push
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.DOCKER_IMAGE }}
        tags: |
          type=sha,format=long
          type=ref,event=tag
          type=ref,event=branch

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name == 'push' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Kubernetes
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3

    - name: Configure kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Deploy to Kubernetes
      run: |
        kubectl config set-context --current --namespace=${{ env.KUBE_NAMESPACE }}
        kubectl apply -f kubernetes/${{ env.KUBE_NAMESPACE }}/manifests/
        
        # Wait for rollout to complete
        kubectl rollout status deployment/aetherial-api -n ${{ env.KUBE_NAMESPACE }}

  notify:
    name: Notify Status
    needs: deploy
    if: always()
    runs-on: ubuntu-latest
    
    steps:
    - name: Send Slack notification
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_COLOR: '#FF0000'
        SLACK_TITLE: 'Deployment Failed'
        SLACK_MESSAGE: 'Deployment of ${{ github.repository }} to ${{ env.KUBE_NAMESPACE }} failed'

    - name: Send success notification
      if: success()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_COLOR: '#36a64f'
        SLACK_TITLE: 'Deployment Succeeded'
        SLACK_MESSAGE: 'Successfully deployed ${{ github.repository }} to ${{ env.KUBE_NAMESPACE }}'
